-Greedy algorithm are mainly used for optimization problems 
-Greedy algo fails at various problems.

Standard problems can be solved by greedy approach
Type 1-Finding optimal solutions:-
1.Activity Selection
2.Fractional Knapsack
3.Job's Sequencing
4.Prim's Algo
5.Krusal's algo
6.Dijkstra's algo
7.Huffman Coding

Type 2- Finding close to optimal solutions for NP hard problems like 
1.Travelling Salesman Problem


--Greedy Algorithm Structure
    getOptimal(int[] arr,int n)
    {
	1: Initialize result=0
	2: while(all items are not considered)
           {
		i=selectAnItem()
                if(feasible(i))
		{
		 result=result+i
    		}
	   }
	return result
    }	

-Question- To use minimum umber of coins(10,5,2,1) to pay amount
 static int minCoins(int coin[], int n, int amount)
    {	
	    	Arrays.sort(coin);

	    	int res = 0;

	    	for(int i = n - 1; i >= 0; i--)
	    	{
	    		if(coin[i] <= amount)
	    		{
	    			int c = (int)Math.floor(amount / coin[i]);

	    			res = res + c;

	    			amount = amount - c * coin[i];
	    		}

	    		if(amount == 0)
	    			break;
	    	}

	    	return res;
    }