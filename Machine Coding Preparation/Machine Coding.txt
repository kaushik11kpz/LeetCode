Types of problems-
There are generally 4 types of problems in Machine Coding in my understanding, I like to categorize them as follows-

CRUD questions - Library Managment, Parking Lot, E-Commerce, Splitwise, Event Scheduling App
Strategy Type - Elevator System, Food Delivery App (this also falls in CRUD questions list), Split Wise with Reducing the transactions (this also falls in CRUD questions list)
Game Questions - Sanke and Ladder, Chess, Ludo
State Based - Vending Machine.
Multithreading - Print even and odd from different threads, Queue like Kafka.
Preparation Tips
Solve atleast 2 of each type and you should be good. Take following points into consideration while practising

Find complete problem statement from anywhere on google.
Start a timer and assume you have to complete the task in 1 hr only
Make sure you behave as if you are in an interview
Create a README file and write all the discussion that you want to convey to the interviewer
Code as fast as you can.
Make habit of error handling and proper logging.
You may explore few shorcuts that can help you reduce coding time during the interview. Like generic datatypes etc.
At each step make sure your code is working, so that in case you run out of time; whatever code you have, is working perfectly fine.
Keep writing driver file in parallel.
Learn these
Try to use evergreen design patterns in your solution like - singelton pattern, factory patter, adapter pattern, strategy pattern, chain of responsibility pattern, momento design pattern, composite design pattern, observer pattern, state desing pattern, momento design pattern.

How to approach any problem
Write down the requirements
Identify the entities/models
find relation amongst them
Clarify the service layer and what params might be required (This will help you in case you might be missing some properties in your models)
Start by creating all models
Create Dao Layer.
Create service layer
Identify special design that fits here - strategy design, state design, etc etc.